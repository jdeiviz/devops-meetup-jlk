master:
  # Set RunAsUser to 1000 to let Jenkins run as non-root user 'jenkins' which exists in 'jenkins/jenkins' docker image.
  # When setting RunAsUser to a different value than 0 also set FsGroup to the same value:
  runAsUser: 1000
  fsGroup: 1000
  # For minikube, set this to NodePort, elsewhere use LoadBalancer
  # Use ClusterIP if your setup includes ingress controller
  serviceType: ClusterIP

  ingress:
    enabled: true
  
  scriptApproval: 
    - method groovy.json.JsonSlurperClassic parseText java.lang.String
    - new groovy.json.JsonSlurperClassic

  # List of plugins to be install during Jenkins master start
  installPlugins:
    - blueocean:1.17.0
    - kubernetes:1.17.2
    - workflow-job:2.33
    - workflow-aggregator:2.6
    - credentials-binding:1.19
    - git:3.10.1
    - pipeline-github-lib:1.0
    - ghprb:1.42.0
    - kubernetes-credentials-provider:0.12.1
    - job-dsl:1.74
    - configuration-as-code:1.23
    - configuration-as-code-support:1.18

  JCasC:
    enabled: true
    configScripts:
      welcome-message: |
        jenkins:
          systemMessage: |
            Jenkins loves Kubernetes.
            Can Kubernetes loves Jenkins?            
            Step by Step, this Jenkins is 100% configured and managed 'as code'.

            Config is now mostly handled by 'Jenkins Configuration as Code Plugin' (JCasC).

      demo-pipeline: |
        jobs:
          - script: >
              multibranchPipelineJob('croc-hunters') {
                branchSources {
                  github {
                    scanCredentialsId('github')
                    repoOwner('jdeiviz')
                    repository('croc-hunter')
                    buildOriginPRMerge(true)
                  }
                }
                orphanedItemStrategy {
                  discardOldItems {
                    numToKeep(1)
                  }
                }
                triggers {
                  periodic(5)
                }
              } 

persistence:
  enabled: false

## Install Default RBAC roles and bindings
rbac:
  create: true
  
serviceAccount:
  create: true
  name: jenkins
